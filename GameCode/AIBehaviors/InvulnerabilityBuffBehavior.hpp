//=====================================================
// InvulnerabilityBuffBehavior.hpp
// by Andrew Socha
//=====================================================

#pragma once

#ifndef __included_InvulnerabilityBuffBehavior__
#define __included_InvulnerabilityBuffBehavior__

#include "BaseAIBehavior.hpp"
#include "Engine/Math/IntVec2.hpp"
class Actor;

class InvulnerabilityBuff : public BaseAIBehavior{
private:
	static AIBehaviorRegistration s_invulnerabilityBuffRegistration;
	inline static BaseAIBehavior* CreateAIBehavior(const std::string& name, const XMLNode& behaviorNode){ return new InvulnerabilityBuff(name, behaviorNode); }

	int m_range;
	int m_duration;
	Actor* m_buffTarget;

public:
	InvulnerabilityBuff(const std::string& name, const XMLNode& behaviorNode);

	float CalcUtility();
	bool Think();
};

#endif